name: docker build
on: push

jobs:
    changes:
        runs-on: ubuntu-22.04
        permissions:
            pull-requests: read
        outputs:
            builds: ${{ steps.filter.outputs.builds }}
            installer: ${{ steps.filter.outputs.installer }}
        steps:
            - uses: actions/checkout@v3
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                filters: |
                    installer:
                        - 'build-dummy.sh'
                    builds:
                        - '.github/workflows/builds.yml'

    build:
        needs: changes
        # if: ${{ (needs.changes.outputs.installer == 'true') }}
        # if: ${{ (needs.changes.outputs.builds == 'true') }}
        if: ${{ (needs.changes.outputs.installer == 'true' || needs.changes.outputs.builds == 'true') }}
        ## Github takes too long to set the current latest image, this is
        ## why we set it manually.
        ##  https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                include:
                    - image: debian:testing
                    #- image: debian:stable ## TODO

        container:
            image: ${{ matrix.image }}

        steps:
            - uses: actions/checkout@v3
            - name: System Basic Packages
              run: |
                  apt-get update
                  apt-get install --yes --no-install-recommends adduser ## shellcheck sudo wget ca-certificates wixl fpc lazarus git
            - name: System information
              run: |
                  cat /etc/os-release
                  uname -a
                  echo "${PATH}"
            - name: Normal user with sudo privileges
              run: |
                  whoami
                  adduser --gecos "" --disabled-password user
                  usermod -aG sudo user
                  echo "%sudo ALL=(ALL) NOPASSWD: ALL" | tee /etc/sudoers.d/user
            #- name: User home folder
              #run: |
                  #mkdir --parents /home/user
                  #chown --recursive user:user /home/user
            #- name: ppcross_install
              #run: ./ppcross_install all
            - name: Run Installer
              run: su -s /bin/bash user -- ./build-dummy.sh
            - name: Run Installer ShellCheck
              run: shellcheck ./*.sh

# vim: sw=4
